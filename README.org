* Emacs Configuration
** Installation
 - Install *emacs*
 - Download this repository to ~.emacs.d~ folder (in your home directory) \\ 
   ~git clone https://github.com/neppramod/emacs-configuration.git .emacs.d~
 - *Note*: /In windows, home directory is at C:\Users\<username>\AppData\Roaming. AppData folder is hidden by default/ \\
 - Link or copy ~emacs.muban~ to ~.emacs.muban~ and put it outside *.emacs.d* in home directory. Assuming you are in ~ or AppData directory \\
   ~ln -s .emacs.d/emacs.muban .emacs.muban~
 - Install the font mentioned in [[https://github.com/neppramod/emacs-configuration/blob/master/configuration.org#font][Font section]] of ~configuration.org~
 - Open emacs. Emacs will install required packages and load other settings in ~init.el~ and [[configuration.org][configuration.org]]
 - If emacs prompts for continue connecting? Select *a* (always)
 - Edit a file and make some changes. Save and quit
 - If emacs asks for Save desktop ? Select *y* (yes) (If it asks for a directory, create a blank directory and enter that location)
 
** Details
  - Read [[configuration.org][configuration.org]], and go through each section on how things are set. I believe it is well documented. Github also loads org file in proper displayable format, so it should be easy to follow.
  - Few custom keys are set, and most of them are found in individual ~use-package~ or [[https://github.com/neppramod/emacs-configuration/blob/master/configuration.org#key-bindings][Key bindings section]]. Usage of default keys are listed in individual Notes section and global [[https://github.com/neppramod/emacs-configuration/blob/master/configuration.org#notes-2][Notes]] section.
  
** Screenshot
[[screenshot-01.png]]

** Custom Packages
   Following packages require special setup and configuration. Install them
   by following following instruction.

*** Org2Blog
   
   Write blog posts to wordpress with below basic setup
   #+BEGIN_SRC emacs-lisp
   (use-package org2blog :ensure t)
   (setq org2blog/wp-blog-alist
      '(("<a profile name for this blog>"
         :url "https://<prefix>.wordpress.com/xmlrpc.php"
         :username "<username>")))
   #+END_SRC

   - Assign a profile and replace <prefix> and <username> with your blog's appropriately
   - Login to your website using ~M-x org2blog-user-login~
   - Once logged in you can manage your blog using ~M-x org2blog-user-interface~
   - The user interface has shortcut keys for most of the options. E.g. You can press ~e~ to create a new blog, ~l~ to publish post, ~k~ to view post and ~;~ to delete post
   - Once you create a buffer save it as org file, and then you can keep on updating it and publish new contents.

*** EMMS
    EMMS lets you play media. For this we need to install the player in our system
    before we can configure this. In this example, we need to install ~mplayer~ and
    set its location. This setup is basic setup.

       #+BEGIN_SRC emacs-lisp
   (use-package emms
   :ensure t
   :config
   (setq exec-path (append exec-path '("/usr/local/bin")))

   (emms-standard)
   (emms-default-players)
   (setq  emms-player-mplayer-parameters '("-novideo"))
   )
   #+END_SRC
   
   Find out the location of mplayer installation with ~which mplayer~ in terminal (in mac, linux), and paste above the directory name where mplayer is located. 
   E.g ~/user/local/bin~ in Mac. In windows, I installed in ~Documents/mplayer~, so it will be something like ~c:/Users/<username>/Documents/mplayer~
  
*** Pdf-Tools
    Pdf-tools is a set of packages that allows to view pdf in emacs. 
    Follow [[https://github.com/politza/pdf-tools][instructions here]] to install required packages for pdf-tools in your system.
    Once you install the required packages, you can install pdf-tools in emacs using following setting.
    
    I was having one issue with pdf viewing. When I closed the pdf, next time, it did not
    load the pdf from last position. I found a script, that asks to set the bookmark for current
    pdf file. That is what ~kill-buffer-hook-setup~ does. I also enabled ~pdf-view-midnight-minor-mode~
    so that pdf loads in dark mode.
    
   #+BEGIN_SRC emacs-lisp

   ;; This allows us to save bookmark while closing pdf
   (defun kill-buffer-hook-setup ()
   (if (and buffer-file-name
   (file-name-extension buffer-file-name)
   (string= (downcase (file-name-extension buffer-file-name)) "pdf")
   (yes-or-no-p "Set bookmark with current file name?"))
   (bookmark-set (file-name-nondirectory buffer-file-name) nil)))

   (use-package pdf-tools
   :ensure t
   :config
   ;; initialise
   (pdf-tools-install)
   ;; open pdfs scaled to fit page
   (setq-default pdf-view-display-size 'fit-page)
   ;; automatically annotate highlights
   (setq pdf-annot-activate-created-annotations t)
   ;; use normal isearch
   (define-key pdf-view-mode-map (kbd "C-s") 'isearch-forward)
   ;; turn off cua so copy works
   (add-hook 'pdf-view-mode-hook (lambda () (cua-mode 0)))
   ;; save pdf at kill
   (add-hook 'kill-buffer-hook 'kill-buffer-hook-setup)
   ;; midnight node by default
   (add-hook 'pdf-tools-enabled-hook 'pdf-view-midnight-minor-mode)
   ;; more fine-grained zooming
   (setq pdf-view-resize-factor 1.1)
   ;; keyboard shortcuts
   (define-key pdf-view-mode-map (kbd "h") 'pdf-annot-add-highlight-markup-annotation)
   (define-key pdf-view-mode-map (kbd "t") 'pdf-annot-add-text-annotation)
   (define-key pdf-view-mode-map (kbd "D") 'pdf-annot-delete)
   (define-key pdf-view-mode-map (kbd ",") 'pdf-view-scroll-down-or-previous-page)
   (define-key pdf-view-mode-map (kbd ".") 'pdf-view-scroll-up-or-next-page))
      #+END_SRC
   Once you add above setting, and load the file and after that call ~M-x pdf-tools-install~ if you see similar error message as below
   
   #+BEGIN_EXAMPLE
   /Users/<username>/.emacs.d/elpa/pdf-tools-20200512.1524/build/server/autobuild -i /Users/<username>/.emacs.d/elpa/pdf-tools-20200512.1524/
Failed to recognize this system, trying to continue.
   #+END_EXAMPLE
   
   Copy the whole line and paste it in external terminal emulator. When I ran it in external terminal outside emacs, it worked without any issues. Make sure thought, you have ~pkg-config~, ~poppler~ and ~automake~ installed (in Mac throught HomeBrew). Above link has proper instructions for windows as well.
   
